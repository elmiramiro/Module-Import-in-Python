import utils as u

result_square_alias = u.square(5)
result_cube_alias = u.cube(5)

print(f"Посредством alias: {result_square_alias}, {result_cube_alias}")

from utils import *

# Прямо вызываем функции
result_square_direct = square(5)
result_cube_direct = cube(5)

print(f"С использованием import *: {result_square_direct}, {result_cube_direct}")

"""Использование инструкции import * ("импорт всех") может вызвать ряд проблем в реальных проектах:

Конфликты имён:При таком способе импорта все объекты из модуля попадают в пространство имен вашего файла. 
Если в нескольких модулях имеются одноимённые функции или классы, возникнет коллизия, и одна из версий замещается другой. 
Определить источник конфликта становится сложнее.
Снижение читабельности:Читателю кода становится труднее понять, откуда пришла 
та или иная функция или класс. 
Вместо четкого указания на модуль (например, module.function) приходится гадать, 
к какому модулю относится тот или иной объект.
Потеря контроля над пространством имен/ Вы не знаете точно, какие именно элементы были импортированы, 
и какое количество памяти занято этими объектами. Особенно актуально, если проект большой и модули обширные.
Ошибки при модификации модулей:Если в будущем разработчики добавляют новые функции или меняют существующие 
в импортируемом модуле, ваш код может начать вести себя непредсказуемо, так как внезапно появляются дополнительные 
объекты или меняются старые.
Рефакторинг усложняется:Поскольку явно не видно, какие конкретно функции или классы были использованы, 
рефакторинг (изменение структуры проекта) становится затруднительным. 
Сложно понять, какие элементы действительно необходимы, а какие лишние.
Рекомендуемый подход заключается в явном импорте нужных элементов, например:"""

